@model CinemaArchiveProje.ViewModels.HomePageViewModel
@{
    ViewData["Title"] = "Ana Sayfa";
}


<div class="sticky-filter">
    <form asp-action="Index" method="get" class="container row g-2">
        <div class="col-md-3">
            <input type="text" name="searchString" value="@Model.SearchString" class="form-control" placeholder="Film adı ara..." />
        </div>
        <div class="col-md-2">
            <select name="genreId" class="form-select">
                <option value="">Tür seç</option>
                @foreach (var genre in (SelectList)ViewBag.Genres)
                {
                    <option value="@genre.Value" selected="@(genre.Selected ? "selected" : null)">@genre.Text</option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <select name="directorId" class="form-select">
                <option value="">Yönetmen seç</option>
                @foreach (var director in (SelectList)ViewBag.Directors)
                {
                    <option value="@director.Value" selected="@(director.Selected ? "selected" : null)">@director.Text</option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <select name="countryId" class="form-select">
                <option value="">Ülke seç</option>
                @foreach (var country in (SelectList)ViewBag.Countries)
                {
                    <option value="@country.Value" selected="@(country.Selected ? "selected" : null)">@country.Text</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-primary w-100">Filtrele</button>
        </div>
    </form>
</div>

<section class="container my-4">
    <div class="d-flex flex-wrap gap-3 justify-content-center">
        @foreach (var genre in (List<Genre>)ViewBag.AllGenres)
        {
            <a asp-controller="Home" asp-action="Index" asp-route-genreId="@genre.Id" class="btn btn-outline-info">
                @genre.Name.ToUpper()
            </a>
        }
    </div>
</section>

<!-- HERO SECTION -->
@if (Model.HeroMovie != null)
{
    <a asp-controller="Movie" asp-action="Details" asp-route-id="@Model.HeroMovie.Id" class="text-decoration-none text-light">
        <section class="hero-section-grid mb-5 hover-glow">
            <div class="hero-poster">
                <img src="@Model.HeroMovie.PosterUrl" alt="@Model.HeroMovie.Title" />
            </div>
            <div class="hero-info">
                <h1>@Model.HeroMovie.Title</h1>
                <p class="description">
                    @(Model.HeroMovie.Description?.Length > 300
                        ? Model.HeroMovie.Description.Substring(0, 300) + "..."
                        : Model.HeroMovie.Description)
                </p>
                <div class="meta">
                    <span>@Model.HeroMovie.ReleaseDate.ToShortDateString()</span> •
                    <span>@Model.HeroMovie.Genre?.Name</span> •
                    <span>@Model.HeroMovie.Director?.Name</span> •
                    <span>@Model.HeroMovie.Country?.Name</span>
                </div>
            </div>
        </section>
    </a>
}


<!-- FİLMLER TÜRE GÖRE -->
@foreach (var genre in Model.MoviesByGenre.Keys)
{
    <section class="genre-section position-relative">
        <h2 class="genre-title">@genre</h2>

        <button class="scroll-btn left" onclick="scrollGenreRow(this, 'left')">&#10094;</button>
        <button class="scroll-btn right" onclick="scrollGenreRow(this, 'right')">&#10095;</button>

        <div class="genre-row scrollable-row">
            @foreach (var movie in Model.MoviesByGenre[genre])
            {
                <a asp-controller="Movie" asp-action="Details" asp-route-id="@movie.Id" class="film-card text-decoration-none text-light">
                    <img src="@movie.PosterUrl" alt="@movie.Title" style="height: 300px; object-fit: cover; width: 100%;" />
                    <div class="p-2">
                        <h5>@movie.Title</h5>
                        <small>@movie.ReleaseDate.ToShortDateString()</small>
                    </div>
                </a>
            }
        </div>
    </section>


}

<!-- SON YORUMLAR -->
@if (ViewBag.LatestReviews != null && ((IEnumerable<CinemaArchiveProje.Models.Review>)ViewBag.LatestReviews).Any())
{
    <h3>Son Yorumlar</h3>
    <ul class="list-group">
        @foreach (var review in (IEnumerable<CinemaArchiveProje.Models.Review>)ViewBag.LatestReviews)
        {
            <li class="list-group-item">
                <strong>@review.Movie?.Title</strong>:
                @review.Content?.Substring(0, Math.Min(review.Content.Length, 100))...
                <span class="text-muted">(@review.DatePosted.ToShortDateString())</span>
            </li>
        }
    </ul>
}
else
{
    <h3>Son Yorumlar</h3>
    <p>Henüz yorum yapılmamış.</p>
}


<script>
    document.addEventListener("DOMContentLoaded", () => {
        const buttons = document.querySelectorAll(".scroll-btn");

        buttons.forEach(button => {
            button.addEventListener("click", () => {
                const direction = button.classList.contains("left") ? "left" : "right";
                const genreSection = button.closest(".genre-section");
                const row = genreSection.querySelector(".genre-row");
                const card = row.querySelector(".film-card");

                if (!row || !card) return;

                const scrollAmount = card.offsetWidth + 20; // 20px: assumed gap
                row.scrollBy({
                    left: direction === "left" ? -scrollAmount : scrollAmount,
                    behavior: "smooth"
                });
            });
        });
    });
</script>